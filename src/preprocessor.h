/*
	Preprocessor：图片预处理器类，处理单个ISBN标签图片并分割为一组字符图片供识别处理，同时提供了许多可复用的实用函数，并支持保存每一步处理结果
*/
#pragma once

#include <opencv2\opencv.hpp>
#include <utility>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <queue>

struct Coordinate {
	int x;
	int y;
};

struct RangeStruct {
	int start;
	int end;
};

struct RangeStructWithID {
	int id;
	RangeStruct range;
};


class Preprocessor{
private:
	// 分步处理的结果
	cv::Mat raw_image;
	cv::Mat resized_image;
	cv::Mat gray_image;
	cv::Mat fitlered_image;
	cv::Mat threshold_image;
	cv::Mat rectified_image;
	cv::Mat flood_filled_image;
	cv::Mat ROI_image_y;
	std::vector<cv::Mat> processed_image_set;

	// 分步的图像处理函数
	int sort_mid(int val[]);					// 获取数组的中值
	cv::Mat resize(cv::Mat&);					// 得到等比例转换为指定宽度的图像
	cv::Mat gray(cv::Mat&);						// 获得灰度化图像
	cv::Mat fitler(cv::Mat&);					// 获得滤波降噪的图像
	cv::Mat threshold(cv::Mat&);				// 获得二值化图像
	cv::Mat rectify(cv::Mat&);					// 获得调整角度后的竖直图像
	cv::Mat flood_fill(cv::Mat&);				// 获得水漫法去除白边的图像
	cv::Mat get_ROI_y_image(cv::Mat&);			// 得到竖直方向的ROI区域图像
	std::vector<cv::Mat> get_ROI_x(cv::Mat&);	// 对竖直方向ROI切割处理得到ISBN的字符图像集

public:
	// 供外部使用的接口
	Preprocessor(cv::Mat);							// 构造函数，接受一个输入图像
	void preprocess();								// 执行处理流程
	void dbg_save(std::string);						// 保存所有处理后的文件
	std::vector<cv::Mat> get_preprocess_result();	// 获取处理结果
};